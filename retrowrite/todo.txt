#########
# lijst #
#########
[X] finalize latency map
[ ] finalize balancing algorithm
    [X] get suitable register
    [X] if this register is clobber register, insert push and pops at start, end of function
    [ ] if no suitable register, insert push and pop before/after instruction (at all nodes in level)
[ ] Finishing touches balancing algorithm
    [X] when inserting jumps at the end of a node, what to do when the edge to the successor was removed to deal with cycles?
        If such an edge exists the last instruction must be a jump, so nothing would need to be done (I think)
    [ ] What to do when next node is inserted node
    [X] remove 'testlabel' in `control_flow_graph.py` line +-316
    [ ] Enfore that the final pop instruction is always the final pop instruction somehow -- take this into account in balancing
        ( Example 8.0-password_comparison: when balancing target_node  '1169')

[ ] clean up code
[ ] deal with loops (don't support loops)
[ ] deal with function calls
[ ] write/improve design section
[ ] find suitable instructions for each latency
