

#######
#TODO #
#######
-- writing --
1.  improve design section writing + implementation section
    - ergens moet er vermeld worden hoe het werkt bij balanced van multiple nodes en/of top level algorithm beschrijven ergens ?
    - determining secret dependent nodes is out of scope
    - stuk over selecteren van reference node moet beter, uitgebreider (misschien met voorbeelden om duidelijk te maken wat de regels juist zijn)
    i.e. de verschillend mogleijke cases, en hoe dit leidt tot de regel
    ook moet er ergens aangegeven worden waarom branching instructions speciaal zijn, en zelfde voor return instructions.
    - ergens aangeven dat return en jumps speciaal behandeld worden (i.e. latency -1)

2. Finish evaluation -- write actual conclusion, some discussion of results
3. implementation, benefir of binary rewriting
-- code --
1. insert push and pop before/after instruction if no free registers
2. clean up NemesisNode and AbstractNemesisNode
3. remove old/unused code + general cleanup



#########
# extra #
#########
- subraph function is has been modified -- adjust text
- _select_register was also modified slightly (check if function is in set of keys, although this should always be true)
- balancing with multiple targets -- adjust text (for each target, first insert nodes, then align for each node, etc. ..)
- iets over feit dat vinden van secret depdendent branches out of scope is
- static analysis evaluation tool - mention something about it first verifying that the depths of the trees are same? Or is this overbodig?
    if depths are not the same then some set will be
- introduce consistent wording -- use it everywhere in the text
    balanced program or aligned program or modified program or .... (kies 1, wees consistent)
-