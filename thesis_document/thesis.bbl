\begin{thebibliography}{1}

\bibitem{intel-ref-manual}
{\em Intel® 64 and IA-32 Architectures Optimization Reference Manual}.

\bibitem{uops}
A.~Abel and J.~Reineke.
\newblock uops.info: Characterizing latency, throughput, and port usage of
  instructions on intel microarchitectures.
\newblock In {\em ASPLOS}, ASPLOS '19, pages 673--686, New York, NY, USA, 2019.
  ACM.

\bibitem{Dinesh2020RetroWriteSI}
S.~Dinesh, N.~Burow, D.~Xu, and M.~Payer.
\newblock Retrowrite: Statically instrumenting cots binaries for fuzzing and
  sanitization.
\newblock {\em 2020 IEEE Symposium on Security and Privacy (SP)}, pages
  1497--1511, 2020.

\bibitem{fog_2021}
A.~Fog.
\newblock Instruction tables:lists of instruction latencies, throughputs and
  micro-operation breakdowns for intel, amd, and via cpus, Mar 2021.

\bibitem{hexhive}
HexHive.
\newblock Hexhive/retrowrite.

\bibitem{dominator}
T.~Lengauer and R.~E. Tarjan.
\newblock A fast algorithm for finding dominators in a flowgraph.
\newblock {\em ACM Trans. Program. Lang. Syst.}, 1(1):121–141, Jan. 1979.

\bibitem{MSP430Detection}
S.~Pouyanrad, J.~T. M\"{u}hlberg, and W.~Joosen.
\newblock Scfmsp: Static detection of side channels in msp430 programs.
\newblock In {\em Proceedings of the 15th International Conference on
  Availability, Reliability and Security}, ARES '20, New York, NY, USA, 2020.
  Association for Computing Machinery.

\bibitem{Nemesis}
J.~Van~Bulck, F.~Piessens, and R.~Strackx.
\newblock Nemesis: Studying microarchitectural timing leaks in rudimentary cpu
  interrupt logic.
\newblock In {\em Proceedings of the 2018 ACM SIGSAC Conference on Computer and
  Communications Security}, CCS '18, page 178–195, New York, NY, USA, 2018.
  Association for Computing Machinery.

\bibitem{WinderixHans}
H.~Winderix, J.~T. Mühlberg, and f.~Piessens.
\newblock Compiler-assisted hardening of embedded software against interrupt
  latency side-channel attacks.
\newblock 2021.

\end{thebibliography}
